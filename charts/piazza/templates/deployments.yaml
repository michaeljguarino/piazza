apiVersion: apps/v1
kind: Deployment
metadata:
  name: piazza-gql
  labels:
{{ include "piazza.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.gql.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: piazza-gql
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: piazza-gql
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.gql.port | quote }}
    spec:
      serviceAccountName: piazza
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: gql
        image: "{{ .Values.gql.image }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: piazza-env
        env:
        - name: HOST
          value: {{ .Values.ingress.dns }}
        - name: DEPLOYED_AT
          value: {{ now | unixEpoch | quote }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GCS_BUCKET
          value: {{ .Values.gql.gcsBucket }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitPasswordSecret }}
              key: rabbitmq-password
        - name: GCP_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: piazza-serviceaccount
              key: key.json
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dbPasswordSecret }}
              key: postgresql-password
        ports:
        - name: http
          containerPort: {{ .Values.gql.port }}
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        - name: thrift
          containerPort: 9090
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        resources:
          {{- toYaml .Values.gql.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: piazza-rtc
  labels:
{{ include "piazza.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.rtc.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: piazza-rtc
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: piazza-rtc
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.rtc.port | quote }}
    spec:
      serviceAccountName: piazza
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: rtc
        image: "{{ .Values.rtc.image }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - secretRef:
            name: piazza-env
        env:
        - name: HOST
          value: {{ .Values.ingress.dns }}
        - name: DEPLOYED_AT
          value: {{ .Release.Time }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GCP_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: piazza-serviceaccount
              key: key.json
        - name: GCS_BUCKET
          value: {{ .Values.gql.gcsBucket }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitPasswordSecret }}
              key: rabbitmq-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dbPasswordSecret }}
              key: postgresql-password
        ports:
        - name: http
          containerPort: {{ .Values.rtc.port }}
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        - name: thrift
          containerPort: 9090
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
        resources:
          {{- toYaml .Values.rtc.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: piazza-www
  labels:
{{ include "piazza.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.www.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: piazza-www
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: piazza-www
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: piazza
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: www
        image: "{{ .Values.www.image }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DEPLOYED_AT
          value: {{ .Release.Time }}
        ports:
        - name: http
          containerPort: {{ .Values.www.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {{- toYaml .Values.www.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
