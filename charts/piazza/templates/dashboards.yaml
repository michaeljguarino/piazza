apiVersion: forgelabs.sh/v1alpha1
kind: Dashboard
metadata:
  name: {{ template "piazza.fullname" $ }}-beam
  labels:
{{ include "piazza.labels" . | indent 4 }}
spec:
  name: beam
  description: internal erlang telemetry for piazza
  timeslices: [30m, 1h, 2h, 1d]
  defaultTime: 30m
  labels:
  - name: "service"
    query:
      query: erlang_vm_ets_limit{app_kubernetes_io_instance="{{ .Release.Name }}"}
      label: app_kubernetes_io_name
  graphs:
  - queries:
    - query: avg(erlang_vm_process_limit{app_kubernetes_io_name="$service"})
      legend: process limit
    - query: avg(erlang_vm_process_count{app_kubernetes_io_name="$service"})
      legend: process count
    name: Process details
  - queries:
    - query: avg(erlang_vm_memory_bytes_total{app_kubernetes_io_name="$service", kind="processes"})
      legend: process memory
    - query: avg(erlang_vm_memory_system_bytes_total{app_kubernetes_io_name="$service", usage="binary"})
      legend: binary heap memory
    - query: avg(erlang_vm_memory_system_bytes_total{app_kubernetes_io_name="$service", usage="code"})
      legend: code memory
    - query: avg(erlang_vm_memory_system_bytes_total{app_kubernetes_io_name="$service", usage="ets"})
      legend: ets memory
    format: bytes
    name: VM memory
---
apiVersion: forgelabs.sh/v1alpha1
kind: Dashboard
metadata:
  name: {{ template "piazza.fullname" $ }}-postgres
  labels:
{{ include "piazza.labels" . | indent 4 }}
spec:
  name: postgres
  description: Monitoring for piazza's postgres db
  timeslices: [30m, 1h, 2h, 1d]
  defaultTime: 30m
  labels:
  - name: instance
    query:
      query: pg_stat_database_tup_fetched{kubernetes_namespace="{{ .Release.Namespace }}"}
      label: instance
  graphs:
  - queries:
    - query: SUM(pg_stat_database_tup_fetched{instance=~"$instance"})
      legend: tuples fetched
    - query: SUM(pg_stat_database_tup_inserted{instance=~"$instance"})
      legend: tuples inserted
    - query: SUM(pg_stat_database_tup_updated{instance=~"$instance"})
      legend: tuples updated
    name: Storage Performance
  - queries:
    - query: pg_settings_max_connections{instance="$instance"}
      legend: connections
    name: Max Connections
  - queries:
    - query: avg(rate(process_cpu_seconds_total{instance="$instance"}[5m]) * 1000)
      legend: seconds
    name: CPU time
  - queries:
    - query: avg(rate(process_resident_memory_bytes{instance="$instance"}[5m]))
      legend: resident mem
    - query: avg(rate(process_virtual_memory_bytes{instance="$instance"}[5m]))
      legend: process mem
    format: bytes
    name: Memory utilization
  - queries:
    - query: process_open_fds{instance="$instance"}
      legend: fds
    name: Open file descriptors
  - queries:
    - query: pg_settings_max_wal_size_bytes{instance="$instance"}
      legend: WAL size
    format: bytes
    name: Max WAL size
  - queries:
    - query: irate(pg_stat_database_xact_commit{instance="$instance"}[5m])
      legend: commits
    - query: irate(pg_stat_database_xact_rollback{instance="$instance"}[5m])
      legend: rollbacks
    name: Transactions
  - queries:
    - query: pg_stat_database_blks_hit{instance="$instance"} / (pg_stat_database_blks_read{instance="$instance"} + pg_stat_database_blks_hit{instance="$instance"})
      legend: hit rate
    name: Cache hit rate
---
apiVersion: forgelabs.sh/v1alpha1
kind: Dashboard
metadata:
  name: {{ template "piazza.fullname" $ }}-rabbit
  labels:
{{ include "piazza.labels" . | indent 4 }}
spec:
  name: rabbitmq
  description: telemetry for piazza's rabbitmq cluster
  timeslices: [30m, 1h, 2h, 1d]
  defaultTime: 30m
  labels:
  - name: kubernetes_pod_name
    query:
      query: rabbitmq_consumers{app_kubernetes_io_instance="{{ .Release.Name }}"}
      label: kubernetes_pod_name
    format: none
  graphs:
  - queries:
    - query: sum(rabbitmq_connections{app_kubernetes_io_instance="{{ .Release.Name }}"})
      legend: connections
    - query: sum(rabbitmq_channels{app_kubernetes_io_instance="{{ .Release.Name }}"})
      legend: channels
    - query: sum(rabbitmq_consumers{app_kubernetes_io_instance="{{ .Release.Name }}"})
      legend: consumers
    format: none
    name: Connection details
  - queries:
    - query: sum(rabbitmq_queue_messages{app_kubernetes_io_instance="{{ .Release.Name }}"})
      legend: messages
    format: none
    name: Messages
  - queries:
    - query: min(rabbitmq_disk_space_available_bytes{kubernetes_pod_name=~"$kubernetes_pod_name"})
      legend: disk free
    - query: min(rabbitmq_disk_space_available_limit_bytes{kubernetes_pod_name=~"$kubernetes_pod_name"})
      legend: memory used
    format: bytes
    name: Disk utilization
  - queries:
    - query: sum(rabbitmq_queue_process_memory_bytes{kubernetes_pod_name=~"$kubernetes_pod_name"}) by (kubernetes_pod_name)
      legend: process memory
    - query: sum(rabbitmq_messages_bytes{kubernetes_pod_name=~"$kubernetes_pod_name"}) by (kubernetes_pod_name)
      legend: message memory
    format: bytes
    name: Memory Utilization